<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tool="http://www.springframework.org/schema/tool" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
     http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/tx  
     http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop  
     http://www.springframework.org/schema/aop/spring-aop.xsd  
     http://www.springframework.org/schema/jee  
     http://www.springframework.org/schema/jee/spring-jee.xsd  
     http://www.springframework.org/schema/context  
     http://www.springframework.org/schema/context/spring-context.xsd  
   	 http://www.springframework.org/schema/cache
	 http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
	 http://www.springframework.org/schema/data/jpa
 	 http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
     http://www.springframework.org/schema/util  
     http://www.springframework.org/schema/util/spring-util-3.1.xsd
     http://www.springframework.org/schema/jdbc 
     http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
     http://www.springframework.org/schema/tool  
     http://www.springframework.org/schema/tool/spring-tool.xsd
     http://www.springframework.org/schema/mvc 
     http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
	default-lazy-init="true" default-autowire="byName">

	<!-- JPA Entity Manager Factory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:packagesToScan="${jpa.entity.scan.packages}" p:dataSource-ref="${jpa.datasource.name}"
		p:jpaVendorAdapter-ref="hibernateVendor" p:jpaPropertyMap-ref="jpaPropertyMap"
		p:persistenceUnitName="${jpa.persistence.unit.name}">
	</bean>

	<bean id="hibernateVendor"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="${database.type}" p:showSql="true" p:generateDdl="true"
		p:databasePlatform="${hibernate.dialect}" />

	<util:map id="jpaPropertyMap">
		<entry key="hibernate.hbm2ddl.auto" value="${hibernate.hbm2ddl.auto}" />
		<entry key="hibernate.dialect" value="${hibernate.dialect}" />
		<entry key="hibernate.format_sql" value="${hibernate.format_sql}" />
		<entry key="hibernate.show_sql" value="${hibernate.show_sql}" />
		<entry key="hibernate.transaction.jta.platform" value="${hibernate.transaction.jta.platform}" />
		<entry key="javax.persistence.transactionType" value="${persistence.transaction.type}" />
		<!-- To enable Hibernate's second level cache and query cache settings -->
		<entry key="hibernate.max_fetch_depth" value="${hibernate.max_fetch_depth}" />
		<entry key="hibernate.cache.use_second_level_cache" value="${hibernate.cache.use_second_level_cache}" />
		<entry key="hibernate.cache.use_query_cache" value="${hibernate.cache.use_query_cache}" />
		<!-- NOTE: if using net.sf.ehcache.hibernate.EhCacheRegionFactory for Hibernate 
			4+, probrems happen -->
		<entry key="hibernate.cache.region.factory_class" value="${hibernate.cache.region.factory_class}" />
	</util:map>

	<!-- User declarative transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!-- This will ensure that Hibernate or JPA exceptions are automatically 
		translated into Spring's generic DataAccessException hierarchy for those 
		classes annotated with Repository. -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />


	<!-- Activate Spring Data JPA repository support -->
	<jpa:repositories base-package="me.geloin" />

	<bean id="dataSource" class="${datasource.driver}">
		<property name="user" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="URL" value="${datasource.url}" />
	</bean>
	
	<bean id="jbossTS" class="com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionManagerImple" />
	<bean id="jbossUserTransaction" class="com.arjuna.ats.internal.jta.transaction.arjunacore.UserTransactionImple" />
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager" ref="jbossTS" />
		<property name="userTransaction" ref="jbossUserTransaction" />
	</bean>
</beans>